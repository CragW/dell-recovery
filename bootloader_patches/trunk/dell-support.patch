This patch sets up the default directories to install to
the target the MBR of the first hard disk from C:\factory.

It's analogous to calling grub-setup.exe like this:

# grub-setup -d C:\factory -r "(//./PHYSICALDRIVE0/)" "//./PHYSICALDRIVE0/"

After this patch, it's possible to just install like this:

# grub-setup.exe

Index: grub2-1.99/include/grub/emu/misc.h
===================================================================
--- grub2-1.99.orig/include/grub/emu/misc.h	2011-09-26 15:31:02.257912346 -0500
+++ grub2-1.99/include/grub/emu/misc.h	2011-09-26 15:31:35.117912343 -0500
@@ -36,8 +36,12 @@
 /* NetBSD uses /boot for its boot block.  */
 # define DEFAULT_DIRECTORY	"/"GRUB_DIR_NAME
 #else
+#ifdef __MINGW32__
+# define DEFAULT_DIRECTORY      "C:/factory"
+#else
 # define DEFAULT_DIRECTORY	"/"GRUB_BOOT_DIR_NAME"/"GRUB_DIR_NAME
 #endif
+#endif
 
 #define DEFAULT_DEVICE_MAP	DEFAULT_DIRECTORY "/device.map"
 
Index: grub2-1.99/util/grub-setup.c
===================================================================
--- grub2-1.99.orig/util/grub-setup.c	2011-09-26 15:31:02.273912346 -0500
+++ grub2-1.99/util/grub-setup.c	2011-09-26 15:51:52.357912209 -0500
@@ -75,6 +75,8 @@
  * result.
  */
 
+#define DELL_TARGET "//./PHYSICALDRIVE0/"
+
 #define DEFAULT_BOOT_FILE	"boot.img"
 #define DEFAULT_CORE_FILE	"core.img"
 #define CORE_IMG_IN_FS		"setup_left_core_image_in_filesystem"
@@ -439,6 +441,13 @@
 	goto unable_to_embed;
       }
 
+    /* Ignore failures in the embedding test */
+    if (grub_errno != GRUB_ERR_NONE)
+    {
+        grub_errno = GRUB_ERR_NONE;
+        grub_util_warn("The embedding test declared a failure.  This is normally non-fatal during WinPE, so it will be ignored.");
+    }
+
     /* Clean out the blocklists.  */
     block = first_block;
     while (block->len)
@@ -831,8 +840,8 @@
         break;
 
       case ARGP_KEY_NO_ARGS:
-          fprintf (stderr, "%s", _("No device is specified.\n"));
-          argp_usage (state);
+          fprintf(stderr, "Installing GRUB2 to `%s'\n", DELL_TARGET);
+          //argp_usage (state);
           break;
 
       default:
@@ -869,7 +878,7 @@
 main (int argc, char *argv[])
 {
   struct stat dev_map_stat;
-  char *root_dev = NULL;
+  char *root_dev = DELL_TARGET;
   char *dest_dev = NULL;
   int must_embed = 0;
   struct arguments arguments;
@@ -914,7 +923,10 @@
   grub_mdraid1x_init ();
   grub_lvm_init ();
 
-  dest_dev = get_device_name (arguments.device);
+  if (arguments.device)
+      dest_dev = get_device_name (arguments.device);
+  else
+      dest_dev = grub_util_get_grub_dev (DELL_TARGET);
   if (! dest_dev)
     {
       /* Possibly, the user specified an OS device file.  */
@@ -946,8 +958,10 @@
 
       root_dev = xstrdup (root_dev);
     }
-  else
+  else if (arguments.device)
     {
+      root_dev = dest_dev;
+      /*
       char *root_device =
         grub_guess_root_device (arguments.dir ? : DEFAULT_DIRECTORY);
 
@@ -962,6 +976,7 @@
       grub_util_info ("guessed root device `%s' and root_dev `%s' from "
                       "dir `%s'", root_device, root_dev,
                       arguments.dir ? : DEFAULT_DIRECTORY);
+      */
     }
 
 #ifdef __linux__
@@ -1023,5 +1038,6 @@
   free (root_dev);
   free (dest_dev);
 
+  fprintf (stderr, "%s", _("Completed successfully.\n"));
   return 0;
 }
